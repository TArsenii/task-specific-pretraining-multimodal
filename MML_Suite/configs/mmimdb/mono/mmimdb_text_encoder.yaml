!StandardConfig
experiment: !ExperimentConfig
  name: "MMIMDb_Text_Encoder_Pretrain"
  device: "cuda"
  train_print_interval_epochs: 1
  validation_print_interval_epochs: 1
  is_train: true
  is_test: true

model: !ModelConfig
  name: "MMIMDb_Text_Encoder"
  model_type: "MMIMDb"

  # Только энкодер текста
  text_encoder: !MMIMDbModalityEncoder
    input_dim: 300
    output_dim: 512

training:
  epochs: 50
  early_stopping: true
  early_stopping_patience: 10
  num_modalities: 1
  optimizer: !Optimizer
    name: "Adam"
    default_kwargs:
      lr: 0.00001
      weight_decay: 0.001
  loss_functions: !LossFunctionGroup
    bce: 
      loss_name: "bce_with_logits"
      loss_args: {}
      weight: 1.0  

data: !DataConfig
  datasets:
    train: !DatasetConfig
      dataset: "mm_imdb"
      data_fp: "$EXP_PATH/DATA/mmimdb/train.hdf5"
      split: "train"
      target_modality: !Modality "TEXT"
      batch_size: 128
      shuffle: true
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality text: !ModalityConfig
            missing_rate: 0.0
        selected_patterns: ["t"]
    validation: !DatasetConfig
      dataset: "mm_imdb"
      data_fp: "$EXP_PATH/DATA/mmimdb/validation.hdf5"
      split: "val"
      target_modality: !Modality "TEXT"
      shuffle: true
      batch_size: 128
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality text: !ModalityConfig
            missing_rate: 0.0
        selected_patterns: ["t"]
    test: !DatasetConfig
      dataset: "mm_imdb"
      data_fp: "$EXP_PATH/DATA/mmimdb/test.hdf5"
      split: "test"
      target_modality: !Modality "TEXT"
      shuffle: true
      batch_size: 128
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality text: !ModalityConfig
            missing_rate: 0.0
        selected_patterns: ["t"]

metrics:
  metrics:
    f1_samples:
      function: "sklearn.metrics.f1_score"
      kwargs:
        average: "samples"
        zero_division: 0
    f1_macro:
      function: "sklearn.metrics.f1_score"
      kwargs:
        average: "macro"
        zero_division: 0
    f1_weighted:
      function: "sklearn.metrics.f1_score"
      kwargs:
        average: "weighted"
        zero_division: 0
    f1_micro:
      function: "sklearn.metrics.f1_score"
      kwargs:
        average: "micro"
        zero_division: 0
  groups:
    classification: ["f1_samples", "f1_macro", "f1_weighted", "f1_micro"]

logging:
  log_path: "$EXP_PATH/experiments_output/{experiment_name}/logs/{run_id}"
  model_output_path: "$EXP_PATH/experiments_output/{experiment_name}/models/{run_id}"
  metrics_path: "$EXP_PATH/experiments_output/{experiment_name}/metrics/{run_id}"
  save_metric: "loss"
  monitor_path: "$EXP_PATH/experiments_output/{experiment_name}/monitoring/{run_id}"
  tensorboard_path: "$EXP_PATH/experiments_output/{experiment_name}/tensorboard/{run_id}"

monitoring:
  enabled: false 