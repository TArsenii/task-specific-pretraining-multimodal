!StandardConfig
experiment: !ExperimentConfig
  name: "iemocap UTT Fusion Baseline"
  device: "cuda"
  train_print_interval_epochs: 1
  validation_print_interval_epochs: 1
  is_train: true
  is_test: true
  cross_validation: 10

model: !ModelConfig
  name: "UTT-Fusion"
  model_type: "UttFusionModel"
  
  netA: !LSTMEncoder
    input_size: 130
    hidden_size: 128
    embd_method: "maxpool"

  netV: !LSTMEncoder
    input_size: 342
    hidden_size: 128
    embd_method: "maxpool"

  netT: !TextCNN
    input_size: 1024
    embd_size: 128
    dropout: 0.5
    in_channels: 1
    out_channels: 128
    kernel_heights: 
      - 3
      - 4
      - 5
  netC: !FcClassifier
    input_dim: 384
    layers: 
      - 256
      - 128
      - 64
    output_dim: 4
    dropout: 0.5
    use_bn: true
  clip: 0.5

training:
  epochs: 30
  batch_size: 256 
  early_stopping: false
  early_stopping_patience: 15
  early_stopping_metric: "loss"
  num_modalities: 3
  optimizer: !Optimizer
    name: "Adam"
    default_kwargs:
      lr: 2e-4
      weight_decay: 0.00001
      betas: [0.9, 0.999]
  loss_functions: !LossFunctionGroup
    cross_entropy: 
      loss_name: "cross_entropy"
      loss_args: {}
      weight: 1.0
  scheduler: "lambda"
  scheduler_args:
    lr_lambda: "max(min_lr, (1.0 - max(0, epoch + epoch_count - niter) / float(niter_decay + 1)))"
    min_lr: 0.000001 # 1e-6
    epoch_count: 1
    niter: 10
    niter_decay: 10
    
data: !DataConfig
  use_collate_fn: true
  datasets:
    train: !DatasetConfig
      dataset: "iemocap"
      data_fp: "$EXP_PATH/DATA/iemocap/"
      split: "trn"
      target_modality: !Modality "MULTIMODAL"
      shuffle: true
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality audio: !ModalityConfig
            missing_rate: 0.0  # Audio is ALWAYS present when included in pattern
          !Modality video: !ModalityConfig
            missing_rate: 0.0  # Video is ALWAYS present when included in pattern
          !Modality text: !ModalityConfig 
            missing_rate: 0.0  # Text is ALWAYS present when included in pattern
        selected_patterns: ["avt"]  # Only use these combinations of modalities
      kwargs: {}
    validation: !DatasetConfig
      dataset: "iemocap"
      data_fp: "$EXP_PATH/DATA/iemocap"
      split: "val"
      shuffle: true
      drop_last: true
      target_modality: !Modality "MULTIMODAL"
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality audio: !ModalityConfig
            missing_rate: 0.0  # Audio is ALWAYS present when included in pattern
          !Modality video: !ModalityConfig
            missing_rate: 0.0  # Video is ALWAYS present when included in pattern
          !Modality text: !ModalityConfig 
            missing_rate: 0.0  # Text is ALWAYS present when included in pattern
        selected_patterns: ["avt", "a", "v", "t", "av", "at", "vt"]
      kwargs: {}

    test: !DatasetConfig
      dataset: "iemocap"
      data_fp: "$EXP_PATH/DATA/iemocap"
      split: "tst"
      target_modality: !Modality "MULTIMODAL"
      shuffle: true
      drop_last: true
      missing_patterns: !MissingPatternConfig
        modalities:
          !Modality audio: !ModalityConfig
            missing_rate: 0.0  # Audio is ALWAYS present when included in pattern
          !Modality video: !ModalityConfig
            missing_rate: 0.0  # Video is ALWAYS present when included in pattern
          !Modality text: !ModalityConfig 
            missing_rate: 0.0  # Text is ALWAYS present when included in pattern
        selected_patterns: ["avt", "a", "v", "t", "av", "at", "vt"]
      kwargs: {}

metrics:
  metrics:
    Accuracy:
      function: "sklearn.metrics.accuracy_score"
      kwargs: {}
      level: "epoch"
    F1_Weighted:
      function: "sklearn.metrics.f1_score"
      kwargs: 
        average: "weighted"
        zero_division: 0
      level: "epoch"    
    F1_Micro:
      function: "sklearn.metrics.f1_score"
      kwargs: 
        average: "micro"
        zero_division: 0
      level: "epoch"
    F1_Macro:
      function: "sklearn.metrics.f1_score"
      kwargs:
        average: "macro"
        zero_division: 0
      level: "epoch"
    Precision_Weighted:
      function: "sklearn.metrics.precision_score"
      kwargs: 
        average: "weighted"
        zero_division: 0
      level: "epoch"
    Precision_Micro:
      function: "sklearn.metrics.precision_score"
      kwargs:
        average: "micro"
        zero_division: 0
      
      level: "epoch"
    Precision_Macro:
      function: "sklearn.metrics.precision_score"
      kwargs:
        average: "macro"
        zero_division: 0
      level: "epoch"
    Recall_Weighted:
      function: "sklearn.metrics.recall_score"
      kwargs: 
        average: "weighted"
        zero_division: 0
      level: "epoch"
    Recall_Micro:
      function: "sklearn.metrics.recall_score"
      kwargs: 
        average: "micro"
        zero_division: 0
      level: "epoch"
    Recall_Macro:
      function: "sklearn.metrics.recall_score"
      kwargs: 
        average: "macro"
        zero_division: 0
      level: "epoch"
    MSA:
      function: "metrics.msa_binary_classification"
      kwargs: {}
      level: "epoch"
    ConfusionMatrix:
      function: "metrics.confusion_matrix_from_logits"
      kwargs: {
        "labels": [0, 1, 2, 3]
      }
      level: "epoch"

logging:
  log_path: "$EXP_PATH/experiments_output/{experiment_name}/logs/{run_id}"
  model_output_path: "$EXP_PATH/experiments_output/{experiment_name}/models/{run_id}"
  metrics_path: "$EXP_PATH/experiments_output/{experiment_name}/metrics/{run_id}"
  save_metric: "loss"
  monitor_path: "$EXP_PATH/experiments_output/{experiment_name}/monitoring/{run_id}"
  tensorboard_path: "$EXP_PATH/experiments_output/{experiment_name}/tensorboard/{run_id}"
  tb_record_only:
    - "loss"

monitoring:
  enabled: false
  gradient_interval: 100
  activation_interval: 100
  weight_interval: 200
  buffer_size: 1000
  compression: "gzip"
  compression_opts: 4
  enable_gradient_tracking: true
  enable_activation_tracking: true
  enable_weight_tracking: true
  enable_layer_convergence: true
  enable_information_flow: false